---
description: Licensing Model and Business Rules for the Figma Plugin
globs: 
---

# Licensing Model and Business Rules

> Note: This document focuses on the business model and feature structure of the licensing system. For technical implementation details, please refer to [licensing_system.mdc](mdc:licensing_system.mdc).

## Overview
This document outlines the business model and feature structure for the Figma Plugin's licensing system. It defines the tier structure, feature availability, and business rules. The model follows a freemium approach with two tiers: Free and Premium.

## Implementation Status

### Completed Features ✓
- License activation and validation system
- Premium vs Free tier differentiation
- Error handling and user feedback
- License management UI with clear status indicators
- Proper error messaging for activation failures
- Integration with LemonSqueezy API
- License deactivation workflow
- Premium feature gating

### UI/UX Implementation ✓
- Clear status display in license management modal
- Intuitive license key input
- Loading states during activation
- Detailed error messages with actionable steps
- Direct link to license management portal
- Premium feature indicators and upgrade prompts

## Tier Structure

### 1. FREE (Freemium)
Basic functionality to evaluate the plugin:

#### Features
- Maximum 5 saved classes
- Basic search by class name
- Single class application
- Basic class operations:
  - Rename class
  - Update class
  - Delete class
  - View class details

#### Limitations
- 5 classes maximum
- No batch operations
- No import/export functionality
- Basic search only

### 2. PREMIUM (Annual Plan)
Full functionality for professional users:

#### Features
- All Free features
- Unlimited classes
- Import/Export functionality
- "Apply All" batch operations
- Future premium features:
  - Advanced search with filters
  - Automatic backup
  - Early access to new features

#### Pricing
- €29/year (regular price)
- Includes all updates
- Priority support
- Early access program

### Error Handling System ✓
typescript
const errorMessages = {
activationLimit: {
message: "This license is already active on another device.",
actions: [
"Visit your LemonSqueezy dashboard to manage your license activations",
"You can deactivate the license from other devices",
"Or purchase an additional license for this device"
],
managementUrl: "https://app.lemonsqueezy.com/my-orders"
}
};

## Feature Flag System ✓

typescript
interface FeatureFlags {
maxClasses: number;
allowImportExport: boolean;
allowApplyAll: boolean;
allowAdvancedSearch: boolean;
allowAutoBackup: boolean;
}
const tierFeatures: Record<'free' | 'premium', FeatureFlags> = {
free: {
maxClasses: 5,
allowImportExport: false,
allowApplyAll: false,
allowAdvancedSearch: false,
allowAutoBackup: false
},
premium: {
maxClasses: Infinity,
allowImportExport: true,
allowApplyAll: true,
allowAdvancedSearch: true,
allowAutoBackup: true
}
};

## User Messages ✓

typescript
const upgradeMessages = {
classLimit: "You've reached the free plan limit of 5 classes. Upgrade to Premium for unlimited classes!",
applyAll: "Apply All is a Premium feature that saves you time by applying classes to multiple frames at once.",
importExport: "Backup and share your classes with Import/Export. Available in Premium.",
advancedSearch: "Unlock advanced search capabilities with Premium.",
autoBackup: "Never lose your work with automatic backups. Available in Premium."
};

#### Promotional Strategy
- **Launch Offer**: Special introductory price (e.g., €19 for the first year)
- **Seasonal Discounts**: Holiday season offers (20-30% off)
- **Early Bird**: Discount for early adopters
- **Referral Program**: Future consideration for discount codes
- **Bulk Purchase**: Future consideration for team licenses

Promotional messages should emphasize value:
```typescript
const promotionalMessages = {
  regular: "Unlock unlimited classes and premium features for just €2.42/month (billed annually)",
  launch: "Special launch price: Get Premium for just €19 for the first year!",
  seasonal: "Holiday Special: Save 30% on your Premium subscription!",
  earlyBird: "Be among the first: Get Premium at a special early bird price!"
};
```

## Implementation Guidelines

> Note: These guidelines focus on feature organization and UI/UX aspects. For technical implementation details and integration specifications, see [licensing_system.mdc](mdc:licensing_system.mdc).

### Feature Flag System
```typescript
interface FeatureFlags {
  maxClasses: number;
  allowImportExport: boolean;
  allowApplyAll: boolean;
  allowAdvancedSearch: boolean;
  allowAutoBackup: boolean;
}

const tierFeatures: Record<'free' | 'premium', FeatureFlags> = {
  free: {
    maxClasses: 5,
    allowImportExport: false,
    allowApplyAll: false,
    allowAdvancedSearch: false,
    allowAutoBackup: false
  },
  premium: {
    maxClasses: Infinity,
    allowImportExport: true,
    allowApplyAll: true,
    allowAdvancedSearch: true,
    allowAutoBackup: true
  }
};
```

### User Messages
```typescript
const upgradeMessages = {
  classLimit: "You've reached the free plan limit of 5 classes. Upgrade to Premium for unlimited classes!",
  applyAll: "Apply All is a Premium feature that saves you time by applying classes to multiple frames at once.",
  importExport: "Backup and share your classes with Import/Export. Available in Premium.",
  advancedSearch: "Unlock advanced search capabilities with Premium.",
  autoBackup: "Never lose your work with automatic backups. Available in Premium."
};
```

### Implementation Phases

#### Phase 1: Core Premium Features
- Implement class limit in Free tier
- Move Import/Export to Premium
- Move Apply All to Premium
- Implement license validation

#### Phase 2: UI/UX Enhancement
- Add class limit indicators
- Implement upgrade prompts
- Create Premium features showcase
- Add premium feature indicators

#### Phase 3: Future Premium Features
- Advanced search implementation
- Backup system
- Additional premium features

### Premium Feature Handling

#### UI Guidelines
1. Show all feature UI elements regardless of tier
2. On interaction with premium features (Free tier):
   - Display informative modal
   - Highlight Premium benefits
   - Show clear upgrade CTA
3. Implement feature previews where possible

#### Code Structure
```typescript
interface PremiumFeatureProps {
  isAllowed: boolean;
  onPremiumRequired: () => void;
  children: React.ReactNode;
}

const PremiumFeature: React.FC<PremiumFeatureProps> = ({
  isAllowed,
  onPremiumRequired,
  children
}) => {
  if (isAllowed) return <>{children}</>;
  
  return (
    <div onClick={onPremiumRequired}>
      {children}
      <PremiumBadge />
    </div>
  );
};
```

## Conversion Strategy

### Trial System
- 14-day trial of Premium features
- Full access to all premium features
- Clear trial expiration notifications

### Usage Tracking
```typescript
interface UsageMetrics {
  savedClasses: number;
  maxFreeClasses: number;
  premiumFeaturesClicked: string[];
  trialStatus: 'none' | 'active' | 'expired';
  trialExpiration?: Date;
}
```

### Premium Feature Preview
- Show UI for premium features
- Provide interactive previews
- Clear upgrade messaging
- Feature comparison table


## Future Considerations

### Potential Enterprise Features
- Team collaboration
- Cloud synchronization
- Advanced analytics
- Custom branding
- Team management

### Upgrade Path
- Free → Premium
- Future consideration for Premium → Enterprise
- Bulk license purchases for teams

## References
- [Figma Plugin Monetization Guidelines](mdc:https:/www.figma.com/plugin-docs/monetization)
- [LemonSqueezy Documentation](mdc:https:/docs.lemonsqueezy.com/)