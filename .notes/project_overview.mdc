## Technical Stack

- **Core Logic:** TypeScript with strict type-checking using Create Figma Plugin
- **UI Framework:** 
  - Preact for component architecture
  - @create-figma-plugin/ui for native Figma components
  - Tailwind CSS for styling with Figma's design system
  - Geist Font for modern typography
- **Build System:** 
  - esbuild through Create Figma Plugin
  - PostCSS for CSS processing
  - Tailwind CSS for utility-first styling
- **Type Safety:** 
  - TypeScript with strict mode
  - Custom type definitions for plugin-specific data
- **Code Quality:**
  - ESLint for code linting
  - Prettier for code formatting
  - TypeScript for type checking

## Project Structure

```
plugin-root/
├── src/                    # Source code directory
│   ├── main.ts            # Main plugin logic
│   ├── ui.tsx             # Plugin UI (Preact components)
│   ├── components/        # Reusable UI components
│   │   ├── common/        # Base components (Button, Text, etc.)
│   │   └── Modal.tsx      # Modal components
│   ├── types.ts           # TypeScript type definitions
│   ├── utils/             # Utility functions
│   │   └── validation.ts  # Data validation
│   ├── lib/               # Library code
│   │   └── utils.ts       # Utility functions
│   ├── styles/            # Style-related files
│   │   ├── fonts.css      # Font definitions
│   │   └── geist.css      # Geist font configuration
│   ├── input.css          # Tailwind CSS entry point
│   └── output.css         # Generated CSS
├── build/                 # Build output directory
├── .notes/               # Project documentation
└── [configuration files] # Various config files
```

### Configuration Files
- `manifest.json`: Plugin metadata and settings
- `tsconfig.json`: TypeScript configuration
- `package.json`: Dependencies and scripts
- `tailwind.config.js`: Tailwind CSS configuration
- `postcss.config.js`: PostCSS configuration 